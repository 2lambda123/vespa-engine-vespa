#!/bin/sh
# Copyright 2016 Yahoo Inc. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.

# BEGIN environment bootstrap section
# Do not edit between here and END as this section should stay identical in all scripts

findpath () {
    myname=${0}
    mypath=${myname%/*}
    myname=${myname##*/}
    if [ "$mypath" ] && [ -d "$mypath" ]; then
        return
    fi
    mypath=$(pwd)
    if [ -f "${mypath}/${myname}" ]; then
        return
    fi
    echo "FATAL: Could not figure out the path where $myname lives from $0"
    exit 1
}

COMMON_ENV=libexec/vespa/common-env.sh

source_common_env () {
    if [ "$VESPA_HOME" ] && [ -d "$VESPA_HOME" ]; then
        # ensure it ends with "/" :
        VESPA_HOME=${VESPA_HOME%/}/
        export VESPA_HOME
        common_env=$VESPA_HOME/$COMMON_ENV
        if [ -f "$common_env" ]; then
            . $common_env
            return
        fi
    fi
    return 1
}

findroot () {
    source_common_env && return
    if [ "$VESPA_HOME" ]; then
        echo "FATAL: bad VESPA_HOME value '$VESPA_HOME'"
        exit 1
    fi
    if [ "$ROOT" ] && [ -d "$ROOT" ]; then
        VESPA_HOME="$ROOT"
        source_common_env && return
    fi
    findpath
    while [ "$mypath" ]; do
        VESPA_HOME=${mypath}
        source_common_env && return
        mypath=${mypath%/*}
    done
    echo "FATAL: missing VESPA_HOME environment variable"
    echo "Could not locate $COMMON_ENV anywhere"
    exit 1
}

findroot

# END environment bootstrap section

cd ${VESPA_HOME} || { echo "Cannot cd to ${VESPA_HOME}" 1>&2; exit 1; }

if [ -f ${VESPA_HOME}conf/zookeeper/zookeeper.cfg ]; then
    chown yahoo ${VESPA_HOME}conf/zookeeper/zookeeper.cfg
    chmod 644 ${VESPA_HOME}conf/zookeeper/zookeeper.cfg
fi

if [ -f ${VESPA_HOME}var/zookeeper/myid ]; then
    chown yahoo ${VESPA_HOME}var/zookeeper/myid
    chmod 644 ${VESPA_HOME}var/zookeeper/myid
fi

${VESPA_HOME}libexec/vespa/vespa-config.pl -isthisaconfigserver 1>/dev/null
if [ "$?" != "0" ] ; then
    echo "Not able to start config server, host `hostname` is not part of 'services.addr_configserver'"
    exit 1;
fi

fixlimits
checkjava

ZOOKEEPER_DATA_PATH="${VESPA_HOME}var/zookeeper/version-2"
if [ ! -d "$ZOOKEEPER_DATA_PATH" ]; then
    echo "Creating data directory $ZOOKEEPER_DATA_PATH"
    mkdir -p $ZOOKEEPER_DATA_PATH
    chown yahoo:users $ZOOKEEPER_DATA_PATH
fi

ZOOKEEPER_LOG_FILE="${VESPA_HOME}logs/vespa/zookeeper.configserver.log"
rm -f $ZOOKEEPER_LOG_FILE*lck

# common setup
export VESPA_LOG_TARGET=file:${VESPA_HOME}logs/vespa/vespa.log
export VESPA_LOG_CONTROL_DIR="${VESPA_HOME}var/db/vespa/logcontrol"
export VESPA_LOG_CONTROL_FILE="${VESPA_HOME}var/db/vespa/logcontrol/configserver.logcontrol"
export VESPA_SERVICE_NAME=configserver
export LD_LIBRARY_PATH=${VESPA_HOME}lib64

#Does not need fast allocation
export MALLOC_ARENA_MAX=1

run-as-yahoo ${VESPA_HOME}libexec/vespa/start-filedistribution
run-as-yahoo ${VESPA_HOME}libexec/vespa/start-logd

# stuff for the configserver process:

appdir="${VESPA_HOME}conf/configserver-app"
pidfile="${VESPA_HOME}var/run/configserver.pid"
cfpfile="${VESPA_HOME}var/jdisc_core/configserver.properties"
bundlecachedir="${VESPA_HOME}var/vespa/bundlecache/configserver"

export JAVAVM_LD_PRELOAD=
unset LD_PRELOAD
# will be picked up by standalone-container:
export standalone_jdisc_container__app_location=${appdir}
export standalone_jdisc_container__deployment_profile=configserver
# used by vespa/models etc:
export VESPA_WEB_SERVICE_PORT=4080

# class path
CP="${VESPA_HOME}lib/jars/jdisc_core-jar-with-dependencies.jar"

baseuserargs="$vespa_base__jvmargs_configserver"
serveruserargs="$cloudconfig_server__jvmargs"
jvmargs="$baseuserargs $serveruserargs"

printenv > $cfpfile
mkdir -p $bundlecachedir
chown -R yahoo $bundlecachedir

run-as-yahoo vespa-runserver -s configserver -r 30 -p $pidfile -- \
	java \
	-Xms128m -Xmx2048m \
	-XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=${VESPA_HOME}var/crash \
	-XX:OnOutOfMemoryError='kill -9 %p' \
	$jvmargs \
	-Djava.library.path=${VESPA_HOME}lib64 \
	-Djava.awt.headless=true \
	-Dsun.rmi.dgc.client.gcInterval=3600000 \
	-Dsun.net.client.defaultConnectTimeout=5000 -Dsun.net.client.defaultReadTimeout=60000 \
	-Djavax.net.ssl.keyStoreType=JKS \
	-Djdisc.config.file=$cfpfile \
	-Djdisc.export.packages= \
	-Djdisc.cache.path=$bundlecachedir \
	-Djdisc.debug.resources=false \
	-Djdisc.bundle.path=${VESPA_HOME}lib/jars \
	-Djdisc.logger.enabled=true \
	-Djdisc.logger.level=ALL \
	-Djdisc.logger.tag=jdisc/configserver \
	-Dfile.encoding=UTF-8 \
	-Dzookeeperlogfile=${VESPA_HOME}logs/vespa/zookeeper.configserver.log \
	-cp "$CP" \
	com.yahoo.jdisc.core.StandaloneMain standalone-container-jar-with-dependencies.jar
