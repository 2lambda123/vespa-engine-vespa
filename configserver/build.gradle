/*
 * This file was generated by the Gradle 'init' task.
 */

dependencies {
    compile project(':filedistribution')
    compile project(':serviceview')
    compile 'org.apache.commons:commons-compress:1.18'
    compile 'commons-io:commons-io:2.4'
    compile 'org.glassfish.jersey.ext:jersey-proxy-client:2.25'
    compile 'net.jpountz.lz4:lz4:1.3.0'

    testCompile project(':testutil')
    testCompile project(':config-model-api')
    testCompile project(path: ':config-model-api', configuration: 'tests' )
    testCompile project(':config-application-package')
    testCompile project(':container-test')
    testCompile hamcrest_all
    testCompile junit_4
    testCompile 'com.github.tomakehurst:wiremock-standalone:2.6.0'
    testCompile 'com.google.guava:guava-testlib:20.0'
    testCompile 'org.apache.curator:curator-test:2.9.1'
    testCompile 'org.mockito:mockito-core:1.9.5'

    providedCompile project(':defaults')
    providedCompile project(':vespajlib')
    providedCompile project(':orchestrator')
    providedCompile project(':application-model')
    providedCompile project(':config-bundle')
    providedCompile project(':config-provisioning')
    providedCompile project(':config-model-api')
    providedCompile project(':config-model')
    providedCompile project(':configserver-flags')
    providedCompile project(':zkfacade')
    providedCompile project(':container-dev')
    providedCompile project(':vespa_jersey2')
    providedCompile project(':container-jersey2')
    providedCompile project(':jrt')
    providedCompile project(':statistics')
    providedCompile project(':configdefinitions')
    providedCompile project(':flags')

    compileOnly 'javax.ws.rs:javax.ws.rs-api:2.0'
    compileOnly guava
    compileOnly jackson_databind
}

task generateVtag(type: JavaExec) {
    dependsOn ":vespajlib:compileJava"
    workingDir = file(buildDir)
    outputs.dir "${buildDir}"

    classpath = files([
        "${rootDir}/vespajlib/build/classes/java/main"
        ])
    main = "com.yahoo.vespa.VersionTagger"
    args = [ 	"${rootDir}/dist/vtag.map", 
		"com.yahoo.vespa.config.server.version", 
		"${buildDir}/generated-sources/vtag" ]
}

compileJava.dependsOn generateVtag

sourceSets {
    main{
        java {
            srcDir "${buildDir}/generated-sources/vtag/"
        }
    }
}
