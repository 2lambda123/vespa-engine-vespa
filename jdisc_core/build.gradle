/*
 * This file was generated by the Gradle 'init' task.
 */

dependencies {
    compile jaxb_api
    compile 'com.sun.xml.bind:jaxb-core:2.3.0'
    compile 'com.sun.xml.bind:jaxb-impl:2.3.0'
    compile 'com.sun.activation:javax.activation:1.2.0'
    compile 'xml-apis:xml-apis:1.4.01'
    compile 'javax.annotation:javax.annotation-api:1.2'
    compile 'aopalliance:aopalliance:1.0'
    compile guava
    compile guice
    compile 'com.google.inject.extensions:guice-assistedinject:3.0'
    compile 'com.google.inject.extensions:guice-multibindings:3.0'
    compile 'commons-daemon:commons-daemon:1.1.0'
    compile 'org.apache.felix:org.apache.felix.framework:6.0.2'
    compile 'org.apache.felix:org.apache.felix.log:1.0.1'
    compile 'org.slf4j:slf4j-api:1.7.5'
    compile 'org.slf4j:jcl-over-slf4j:1.7.5'
    compile 'org.slf4j:log4j-over-slf4j:1.7.5'
    compile 'org.slf4j:slf4j-jdk14:1.7.5'
    compile project(':config-lib')
    compile project(':yolean')
    compile project(':vespajlib')
    testCompile mockito
    testCompile project(':testutil')
    testCompile project(':defaults')
}

description = 'jdisc_core'

def String stripVersion(String fileNameWithVersion) {
	String ext = fileNameWithVersion.substring(fileNameWithVersion.lastIndexOf("."),fileNameWithVersion.length())
	int end = fileNameWithVersion.lastIndexOf("-"); //assumes that: name-version.ext. Will not work with name-version-SNAPSHOT.ext
	String fileNameWithoutVersion = fileNameWithVersion.substring(0, end) + ext
	return fileNameWithoutVersion
}

task copyDependencyResources(type: Copy) {
	from configurations.runtime
	into "${buildDir}/dependency/"
	rename { fileName ->
		stripVersion(fileName)
	}	
}

task createGeneratedResourcesDir {
	doFirst {
		mkdir "${buildDir}/generated-resources/"
	}
}

task exportPackages(type: JavaExec) {
	dependsOn compileJava, createGeneratedResourcesDir, copyDependencyResources
	workingDir = file(buildDir)
	outputs.dir "${buildDir}/generated-resources/"

	classpath = sourceSets.main.runtimeClasspath
	
	main = "com.yahoo.jdisc.core.ExportPackages"
	args = [ 
		"${buildDir}/generated-resources/exportPackages.properties",
		"${buildDir}/dependency/commons-daemon.jar",
		"${buildDir}/dependency/guava.jar",
		"${buildDir}/dependency/guice.jar",
		"${buildDir}/dependency/guice-assistedinject.jar",
		"${buildDir}/dependency/guice-multibindings.jar",
		"${buildDir}/dependency/javax.annotation-api.jar",
		"${buildDir}/dependency/org.apache.felix.log.jar",
		"${buildDir}/dependency/slf4j-api.jar",
		"${buildDir}/dependency/slf4j-jdk14.jar",
		"${buildDir}/dependency/jcl-over-slf4j.jar",
		"${buildDir}/dependency/log4j-over-slf4j.jar",
		"${buildDir}/dependency/config-lib.jar",
		"${buildDir}/dependency/yolean.jar",
		"${buildDir}/dependency/jaxb-api.jar",
		"${buildDir}/dependency/jaxb-core.jar",
		"${buildDir}/dependency/jaxb-impl.jar",
		"${buildDir}/dependency/javax.activation.jar",
		]
		
	jvmArgs = [ "--add-opens=java.base/java.net=ALL-UNNAMED" ]
}

test.dependsOn exportPackages

sourceSets {
        test {
          resources {
                 srcDir "${buildDir}/generated-resources/"
          }
        }
}
